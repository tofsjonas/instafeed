(function(k, b) {
  function I(a, d) {
    var g = a.children[1], e = a.children[2], c = a.children[0].children[0], m = 0, y = 0, f = 0, k, q, p, r, n, B, C, l, t, u, z = !1, h, D, A = !0, F = function() {
      a.classList.remove("loaded");
      z = !0;
      t = 0;
      u = !0;
      q = c.children;
      p = q.length;
      r = q[0];
      n = r.getBoundingClientRect().width;
      B = q[p - 1];
      C = r.cloneNode(!0);
      l = B.cloneNode(!0);
      c.insertBefore(l, r);
      c.appendChild(C);
      E();
      setTimeout(function() {
        z = !1;
        a.classList.add("loaded");
      }, 5);
    }, G = function(a) {
      a = a || b.event;
      a.preventDefault();
      var e = b.getComputedStyle(c);
      f = parseFloat(e.getPropertyValue("left"));
      "touchstart" == a.type ? m = a.touches[0].clientX : (m = a.clientX, b.addEventListener("mouseup", v), b.addEventListener("mousemove", w), b.addEventListener("touchend", v), b.addEventListener("touchmove", w));
    }, w = function(a) {
      a = a || b.event;
      "touchmove" == a.type ? (y = m - a.touches[0].clientX, m = a.touches[0].clientX) : (y = m - a.clientX, m = a.clientX);
      c.style.left = c.offsetLeft - y + "px";
    }, v = function() {
      k = c.offsetLeft;
      5 < Math.abs(k - f) && b.addEventListener("click", H);
      -100 > k - f ? x(1, "drag") : 100 < k - f ? x(-1, "drag") : c.style.left = f + "px";
      b.removeEventListener("mouseup", v);
      b.removeEventListener("mousemove", w);
      b.removeEventListener("touchend", v);
      b.removeEventListener("touchmove", w);
      setTimeout(function() {
        b.removeEventListener("click", H);
      }, 10);
    }, x = function(a, e) {
      if (!A) {
        c.classList.add("shifting");
        if (u) {
          if (!e) {
            var d = b.getComputedStyle(c);
            f = parseFloat(d.getPropertyValue("left"));
          }
          1 == a ? (c.style.left = f - n + "px", t++) : -1 == a && (c.style.left = f + n + "px", t--);
        }
        u = !1;
      }
    }, H = function(a) {
      a.preventDefault();
    }, E = function() {
      if (d) {
        f = 0;
        n = a.getBoundingClientRect().width;
        for (var e = a.getBoundingClientRect().height, b = c.children, p = 0; p < b.length; p++) {
          var g = b[p];
          g.style.width = n + "px";
          g.style.height = e + "px";
        }
      } else {
        f = 0, n = r.getBoundingClientRect().width, a.style.width = n + "px";
      }
      c.style.left = "-" + n + "px";
      A = !1;
    };
    b.addEventListener("resize", function() {
      A = !0;
      clearTimeout(D);
      D = setTimeout(E, 150);
    });
    (new MutationObserver(function() {
      z || (clearTimeout(h), h = setTimeout(F, 10));
    })).observe(c, {subtree:!0, childList:!0});
    c.addEventListener("touchstart", G);
    c.addEventListener("mousedown", G);
    g.addEventListener("click", function() {
      x(-1, null);
    });
    e.addEventListener("click", function() {
      x(1, null);
    });
    c.addEventListener("transitionend", function() {
      c.classList.remove("shifting");
      -1 == t && (c.style.left = -(p * n) + "px", t = p - 1);
      t == p && (c.style.left = -(1 * n) + "px", t = 0);
      u = !0;
    });
    F();
  }
  var J = function(a) {
    var b = [], g = k.createElement("span");
    if (200 === a.meta.code) {
      a.data.forEach(function(a) {
        var c = a.comments.count || 0, e = a.likes.count || 0, d = a.caption ? a.caption.text.replace(/(?:\r\n|\r|\n)/g, "<br>") : "", f = '<a target="_blank" href="' + a.link + '">';
        f += '<img src="' + a.images.standard_resolution.url + '" alt="" /><div class="info">';
        f = f + (0 < e ? '<div class="likes">' + e + "</div>" : "") + (0 < c ? '<div class="comments">' + c + "</div>" : "");
        f += 0 < d.length ? '<div class="caption">' + d + "</div>" : "";
        f += "</div>";
        f += "</a>";
        g.innerHTML = f;
        b.push(g.firstElementChild);
      });
    } else {
      throw '"' + a.meta.error_message + '"';
    }
    return b;
  }, h = function(a) {
    a.onload = function() {
      a.removeAttribute("data-src");
    };
    a.src = a.getAttribute("data-src");
  }, K = function(a) {
    a = [].slice.call(a.querySelectorAll("[data-src]"));
    if ("IntersectionObserver" in b) {
      var d = new IntersectionObserver(function(a) {
        a.forEach(function(a) {
          a.isIntersecting && (a = a.target, h(a), d.unobserve(a));
        });
      });
      a.forEach(function(a) {
        d.observe(a);
      });
    } else {
      a.forEach(function(a) {
        h(a);
      });
    }
  }, L = function(a) {
    if (!a.classList.contains("prep")) {
      var d = a.dataset, g = d.token || "", e = +d.count || 20, c = +d.rows || 2;
      "undefined" == typeof a.dataset.header && (a.dataset.header = "Follow us on Instagram");
      a.innerHTML = '<div class="wrapper"><div class="items"></div></div><button class="left"></button><button class="right"></button>';
      var m = [], l = a.querySelector(".items");
      d = "a" + (0 | 9e6 * Math.random()).toString(36);
      g = "https://api.instagram.com/v1/users/self/media/recent?access_token=" + g + ("&count=" + e) + ("&callback=window.instafunx." + d);
      e = k.createElement("script");
      e.setAttribute("src", g);
      e.onerror = function() {
        a.setAttribute("data-error", "Instagram feed failed \ud83d\ude1e\n\nMost likely due to an ad blocker...");
      };
      var f = 0, h = function() {
        for (var b = a.offsetWidth, d = +a.dataset.cols || 2, e = 600; e < b;) {
          e += 600, d++;
        }
        a.style.setProperty("padding-bottom", c / d * 100 + "%");
        l.style.setProperty("grid-template-rows", "repeat(" + c + ", 1fr)");
        b = c * d;
        e = b * Math.floor(m.length / b);
        if (b != f) {
          f = b;
          l.innerHTML = "";
          for (var g, h = 0; h < e; h++) {
            if (0 == h || 0 == h % b) {
              g = k.createElement("div"), g.style.setProperty("grid-template-columns", "repeat(" + d + ", 1fr)"), l.appendChild(g);
            }
            g.appendChild(m[h]);
          }
        }
      }, q;
      b.addEventListener("resize", function() {
        clearTimeout(q);
        q = setTimeout(h, 150);
      });
      b.instafunx[d] = function(b) {
        try {
          m = J(b), h(), I(a, !0);
        } catch (r) {
          a.setAttribute("data-error", "Instagram feed failed \ud83d\ude1e\n\n" + r.message);
        }
        K(a);
      };
      a.className += " prep";
      k.body.appendChild(e);
    }
  }, l = k.createElement("link");
  l.rel = "stylesheet";
  l.href = k.currentScript.src.replace(/(\.min)*\.js$/, "$1.css");
  k.head.appendChild(l);
  b.instafunx = {};
  l = function() {
    for (var a = k.querySelectorAll(".instafeed:not(.prep)"), b = 0; b < a.length; b++) {
      L(a[b]);
    }
  };
  l();
  b.instafeed = l;
})(document, window);